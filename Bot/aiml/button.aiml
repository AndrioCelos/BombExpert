<?xml version="1.0" encoding="UTF-8"?>
<aiml>
	<topic name='bomb button'>
		<category>
			<pattern>SelectModule</pattern>
			<template>Tell me the colour and label of the button.</template>
		</category>

		<category>
			<pattern>next button *</pattern>
			<template>
				<think><srai>next instance</srai></think>
				<sr/>
			</template>
		</category>

		<category>
			<pattern><set>BombColours</set> <set>ButtonLabels</set></pattern>
			<template><srai>SolveAndTellButton <star/> <star index='2'/></srai></template>
		</category>
		<category>
			<pattern><set>ButtonLabels</set> <set>BombColours</set></pattern>
			<template><srai>SolveAndTellButton <star index='2'/> <star/></srai></template>
		</category>

		<category>
			<pattern>SolveAndTellButton *</pattern>
			<template>
				<think>
					<set var='result'><srai>Solver Button <star/></srai></set>
					<set var='code'><srai>XFirst <get var='result'/></srai></set>
					<set var='detail'><srai>XRest <get var='result'/></srai></set>
				</think>
				<condition var='code'>
					<li value='NeedEdgework'><srai>EdgeworkQuery <get var='detail'/> XS SolveAndTellButton <star/></srai></li>
					<li value='Tap'>Tap the button.</li>
					<li value='Hold'>Hold the button.</li>
					<li value='TapWhenSecondsMatch'>When the two seconds digits on the timer match, tap the button.</li>
				</condition>
			</template>
		</category>

		<!-- Usage: Solver Button [colour] [label]? -->
		<category>
			<pattern>SolverFallback Button 1 <set>BombColours</set> <set>ButtonLabels</set></pattern>
			<template>
				<think>
					<set var='colour'><star/></set>
					<set var='label'><star index='2'/></set>
					<!-- If the button is blue and the button says "Abort", hold the button and refer to "Releasing a Held Button". -->
					<condition var='colour' value='blue'>
						<condition var='label' value='Abort'>
							<set var='result'>Hold</set>
						</condition>
					</condition>

					<condition var='result' value='unknown'>
						<!-- If there is more than 1 battery on the bomb and the button says "Detonate", press and immediately release the button. -->
						<condition var='label' value='Detonate'>
							<condition name='BombBatteryCount'>
								<li value='unknown'><set var='result'>NeedEdgework BatteryCount</set></li>
								<li value='0'></li>
								<li value='1'></li>
								<li><set var='result'>Tap</set></li>
							</condition>
						</condition>
					</condition>

					<condition var='result' value='unknown'>
						<!-- If the button is white and there is a lit indicator with label CAR, hold the button and refer to "Releasing a Held Button". -->
						<condition var='colour' value='white'>
							<condition name='BombIndicatorLitCAR'>
								<li value='unknown'><set var='result'>NeedEdgework IndicatorLit CAR</set></li>
								<li value='true'><set var='result'>Hold</set></li>
							</condition>
						</condition>
					</condition>

					<condition var='result' value='unknown'>
						<!-- If there are more than 2 batteries on the bomb and there is a lit indicator with label FRK, press and immediately release the button. -->
						<condition name='BombBatteryCount'>
							<li value='unknown'><set var='result'>NeedEdgework BatteryCount</set></li>
							<li value='0'></li>
							<li value='1'></li>
							<li value='2'></li>
							<li>
								<condition name='BombIndicatorLitFRK'>
									<li value='unknown'><set var='result'>NeedEdgework IndicatorLit FRK</set></li>
									<li value='true'><set var='result'>Tap</set></li>
								</condition>
							</li>
						</condition>
					</condition>

					<condition var='result' value='unknown'>
						<!-- If the button is yellow, hold the button and refer to "Releasing a Held Button". -->
						<condition var='colour' value='yellow'>
							<set var='result'>Hold</set>
						</condition>
					</condition>

					<condition var='result' value='unknown'>
						<!-- If the button is red and the button says "Hold", press and immediately release the button. -->
						<condition var='colour' value='red'>
							<condition var='label' value='Hold'>
								<set var='result'>Tap</set>
							</condition>
						</condition>
					</condition>

					<condition var='result' value='unknown'>
						<!-- If none of the above apply, hold the button and refer to "Releasing a Held Button". -->
						<set var='result'>Hold</set>
					</condition>
				</think>
				<get var='result'/>
			</template>
		</category>
		<category>
			<pattern>SolverFallback Button 1 <set>BombColours</set></pattern>
			<template>
				<think><set var='colour'><star/></set></think>
				<condition var='colour'>
					<li value='blue'>ReleaseOnTimerDigit 4</li>
					<li value='yellow'>ReleaseOnTimerDigit 5</li>
					<li>ReleaseOnTimerDigit 1</li>
				</condition>
			</template>
		</category>

		<category>
			<pattern><set>BombColours</set></pattern>
			<that>^ Hold the button</that>
			<template>
				<think>
					<set var='result'><srai>Solver Button <star/></srai></set>
					<set var='code'><srai>XFirst <get var='result'/></srai></set>
					<set var='detail'><srai>XRest <get var='result'/></srai></set>
					<srai>SouvenirPut Colour XS <star/></srai>
				</think>
				<condition var='code'>
					<li value='ReleaseOnTimerDigit'>When any digit on the timer is a <get var='detail'/>, release the button.</li>
					<li value='ReleaseOnSecondsDigitSum'>
						<!-- If possible, either this number or 10 plus this number is accepted. -->
						<!-- The sum of the seconds digits cannot exceed 15. -->
						<think><set var='compare'><srai>XCompareDigits <get var='detail'/> 5</srai></set></think>
						<condition var='detail'>
							<li value='1'>When the two seconds digits on the timer add to <get var='detail'/>, release the button.</li>
							<li>When the two seconds digits on the timer add to <get var='detail'/> or 1<get var='detail'/>, release the button.</li>
						</condition>
					</li>
					<li value='ReleaseOnSecondsPrimeOrZero'>When the seconds component of the timer is prime or zero, release the button.</li>
					<li value='ReleaseOnSecondsMultipleOfFour'>When the seconds component of the timer is a multiple of 4, release the button.</li>
					<li value='ReleaseOnSecondsOnesDigit'>When the right-most seconds digit on the timer is a <get var='detail'/>, release the button.</li>
					<li value='ReleaseAnyTime'>Release the button at any time.</li>
				</condition>
			</template>
		</category>
	</topic>

	<category>
		<pattern>SouvenirInput Button XS <set>number</set></pattern>
		<template><srai>SouvenirGet Button XS <star/> XS Colour</srai></template>
	</category>
</aiml>
